{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1IWPRXoKbwMgsPFxWavCe0vtx7a2JvkoW","authorship_tag":"ABX9TyPGsO/FWUY7MTXYUDoun6N0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["! pip install pyngrok"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HKhNajalAitH","executionInfo":{"status":"ok","timestamp":1697642888572,"user_tz":-330,"elapsed":6420,"user":{"displayName":"RAHUL KUMAR","userId":"05625239064891269634"}},"outputId":"e46932c8-6d55-43da-9759-624224d57d1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pyngrok in /usr/local/lib/python3.10/dist-packages (7.0.0)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.10/dist-packages (from pyngrok) (6.0.1)\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4_96cgFJdOA7"},"outputs":[],"source":["# Import function for machine learning project\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn import metrics"]},{"cell_type":"code","source":["car_df = pd.read_csv('/content/drive/MyDrive/car_data.csv')"],"metadata":{"id":"iXwAglT6daia"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["car_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TwiKJZU5dv3b","executionInfo":{"status":"ok","timestamp":1697641979716,"user_tz":-330,"elapsed":475,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"f91ab44f-4563-4208-9f74-b001386d5074"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 301 entries, 0 to 300\n","Data columns (total 9 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   Car_Name       301 non-null    object \n"," 1   Year           301 non-null    int64  \n"," 2   Selling_Price  301 non-null    float64\n"," 3   Present_Price  301 non-null    float64\n"," 4   Kms_Driven     301 non-null    int64  \n"," 5   Fuel_Type      301 non-null    object \n"," 6   Seller_Type    301 non-null    object \n"," 7   Transmission   301 non-null    object \n"," 8   Owner          301 non-null    int64  \n","dtypes: float64(2), int64(3), object(4)\n","memory usage: 21.3+ KB\n"]}]},{"cell_type":"code","source":["car_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"PE23-361eZnw","executionInfo":{"status":"ok","timestamp":1697641988107,"user_tz":-330,"elapsed":538,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"25da768a-5be2-4b06-f1ec-3ea5dba89c46"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Car_Name  Year  Selling_Price  Present_Price  Kms_Driven Fuel_Type  \\\n","0     ritz  2014           3.35           5.59       27000    Petrol   \n","1      sx4  2013           4.75           9.54       43000    Diesel   \n","2     ciaz  2017           7.25           9.85        6900    Petrol   \n","3  wagon r  2011           2.85           4.15        5200    Petrol   \n","4    swift  2014           4.60           6.87       42450    Diesel   \n","\n","  Seller_Type Transmission  Owner  \n","0      Dealer       Manual      0  \n","1      Dealer       Manual      0  \n","2      Dealer       Manual      0  \n","3      Dealer       Manual      0  \n","4      Dealer       Manual      0  "],"text/html":["\n","  <div id=\"df-ec409952-0956-4eec-9161-9ff2dfbcd22a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car_Name</th>\n","      <th>Year</th>\n","      <th>Selling_Price</th>\n","      <th>Present_Price</th>\n","      <th>Kms_Driven</th>\n","      <th>Fuel_Type</th>\n","      <th>Seller_Type</th>\n","      <th>Transmission</th>\n","      <th>Owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ritz</td>\n","      <td>2014</td>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sx4</td>\n","      <td>2013</td>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ciaz</td>\n","      <td>2017</td>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>wagon r</td>\n","      <td>2011</td>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>swift</td>\n","      <td>2014</td>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec409952-0956-4eec-9161-9ff2dfbcd22a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec409952-0956-4eec-9161-9ff2dfbcd22a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec409952-0956-4eec-9161-9ff2dfbcd22a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-168c6bbe-d5e5-462c-8f65-76881744a3be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-168c6bbe-d5e5-462c-8f65-76881744a3be')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-168c6bbe-d5e5-462c-8f65-76881744a3be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["car_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"xk8c0vTYeepr","executionInfo":{"status":"ok","timestamp":1697641993467,"user_tz":-330,"elapsed":508,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"5965a829-b4e0-4fe0-e58c-b891fdf552de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Car_Name  Year  Selling_Price  Present_Price  Kms_Driven Fuel_Type  \\\n","0     ritz  2014           3.35           5.59       27000    Petrol   \n","1      sx4  2013           4.75           9.54       43000    Diesel   \n","2     ciaz  2017           7.25           9.85        6900    Petrol   \n","3  wagon r  2011           2.85           4.15        5200    Petrol   \n","4    swift  2014           4.60           6.87       42450    Diesel   \n","\n","  Seller_Type Transmission  Owner  \n","0      Dealer       Manual      0  \n","1      Dealer       Manual      0  \n","2      Dealer       Manual      0  \n","3      Dealer       Manual      0  \n","4      Dealer       Manual      0  "],"text/html":["\n","  <div id=\"df-6a6b5a0d-e558-43c1-8311-0639ef860c24\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car_Name</th>\n","      <th>Year</th>\n","      <th>Selling_Price</th>\n","      <th>Present_Price</th>\n","      <th>Kms_Driven</th>\n","      <th>Fuel_Type</th>\n","      <th>Seller_Type</th>\n","      <th>Transmission</th>\n","      <th>Owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ritz</td>\n","      <td>2014</td>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sx4</td>\n","      <td>2013</td>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ciaz</td>\n","      <td>2017</td>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>wagon r</td>\n","      <td>2011</td>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>Petrol</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>swift</td>\n","      <td>2014</td>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>Diesel</td>\n","      <td>Dealer</td>\n","      <td>Manual</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a6b5a0d-e558-43c1-8311-0639ef860c24')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6a6b5a0d-e558-43c1-8311-0639ef860c24 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6a6b5a0d-e558-43c1-8311-0639ef860c24');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8232e236-be2d-45ad-8b63-dc5953ff1c58\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8232e236-be2d-45ad-8b63-dc5953ff1c58')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8232e236-be2d-45ad-8b63-dc5953ff1c58 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["car_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B5DIz7oPejDR","executionInfo":{"status":"ok","timestamp":1697641997985,"user_tz":-330,"elapsed":7,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"6dc6fbd8-3479-451a-f981-b8edb66b8245"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(301, 9)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["car_df.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KHhFtLOMes3_","executionInfo":{"status":"ok","timestamp":1697642003285,"user_tz":-330,"elapsed":559,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"c03a09ea-951c-433f-a30c-02aedde56f44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(301, 9)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["car_df.isnull().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U9NacS8jeznw","executionInfo":{"status":"ok","timestamp":1697642006404,"user_tz":-330,"elapsed":446,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"4b69b65f-eb6b-4755-d5d8-550fddeab7c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Car_Name         0\n","Year             0\n","Selling_Price    0\n","Present_Price    0\n","Kms_Driven       0\n","Fuel_Type        0\n","Seller_Type      0\n","Transmission     0\n","Owner            0\n","dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["from pandas.core.base import value_counts\n","print(car_df['Fuel_Type'].value_counts())\n","print(\"\\n\")\n","print(car_df['Seller_Type'].value_counts())\n","print(\"\\n\")\n","print(car_df.Transmission.value_counts())\n","print(\"\\n\")\n","print(car_df.Car_Name.value_counts())"],"metadata":{"id":"3GoA85oKe9E8","colab":{"base_uri":"https://localhost:8080/","height":245},"executionInfo":{"status":"error","timestamp":1697652149707,"user_tz":-330,"elapsed":816,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"1747973b-6743-4745-a23b-7cbba5631118"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-7aa233de8878>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mpandas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbase\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mvalue_counts\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcar_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Fuel_Type'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue_counts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\n\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcar_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Seller_Type'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue_counts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\n\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'car_df' is not defined"]}]},{"cell_type":"code","source":["# encodding 'Fuel_Type' column\n","car_df.replace({'Fuel_Type': {'Petrol': 0, 'Diesel': 1, 'CNG': 2}}, inplace = True)\n","\n","# encoding 'Seller_Type' column\n","car_df.replace({'Seller_Type': {'Dealer': 0, 'Individual': 1}}, inplace = True)\n","\n"," # encodding for\n","\n","car_df.replace({'Transmission': {'Manual': 0, 'Automatic': 1}}, inplace = True)\n","\n","\n","car_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"O6xqAiKmkZJj","executionInfo":{"status":"ok","timestamp":1697642023678,"user_tz":-330,"elapsed":494,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"02990fc9-63c4-419c-a367-1e4813118243"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Car_Name  Year  Selling_Price  Present_Price  Kms_Driven  Fuel_Type  \\\n","0     ritz  2014           3.35           5.59       27000          0   \n","1      sx4  2013           4.75           9.54       43000          1   \n","2     ciaz  2017           7.25           9.85        6900          0   \n","3  wagon r  2011           2.85           4.15        5200          0   \n","4    swift  2014           4.60           6.87       42450          1   \n","\n","   Seller_Type  Transmission  Owner  \n","0            0             0      0  \n","1            0             0      0  \n","2            0             0      0  \n","3            0             0      0  \n","4            0             0      0  "],"text/html":["\n","  <div id=\"df-838fc780-effb-49a2-9df4-6a002aefe190\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car_Name</th>\n","      <th>Year</th>\n","      <th>Selling_Price</th>\n","      <th>Present_Price</th>\n","      <th>Kms_Driven</th>\n","      <th>Fuel_Type</th>\n","      <th>Seller_Type</th>\n","      <th>Transmission</th>\n","      <th>Owner</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ritz</td>\n","      <td>2014</td>\n","      <td>3.35</td>\n","      <td>5.59</td>\n","      <td>27000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sx4</td>\n","      <td>2013</td>\n","      <td>4.75</td>\n","      <td>9.54</td>\n","      <td>43000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ciaz</td>\n","      <td>2017</td>\n","      <td>7.25</td>\n","      <td>9.85</td>\n","      <td>6900</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>wagon r</td>\n","      <td>2011</td>\n","      <td>2.85</td>\n","      <td>4.15</td>\n","      <td>5200</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>swift</td>\n","      <td>2014</td>\n","      <td>4.60</td>\n","      <td>6.87</td>\n","      <td>42450</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-838fc780-effb-49a2-9df4-6a002aefe190')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-838fc780-effb-49a2-9df4-6a002aefe190 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-838fc780-effb-49a2-9df4-6a002aefe190');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-696a6e0b-547b-42b2-9ae5-9ffabc2f1070\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-696a6e0b-547b-42b2-9ae5-9ffabc2f1070')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-696a6e0b-547b-42b2-9ae5-9ffabc2f1070 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["X = car_df.drop(['Car_Name','Selling_Price'], axis = 1) # data\n","Y = car_df['Selling_Price'] # target\n","\n","print(X.shape)\n","print(Y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5tGnb3DBmPXG","executionInfo":{"status":"ok","timestamp":1697642030729,"user_tz":-330,"elapsed":436,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"42353e8a-6e59-4245-a72b-7bd94caefac1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(301, 7)\n","(301,)\n"]}]},{"cell_type":"code","source":["X_train, X_test, Y_train, Y_test = train_test_split(X,\n","                                                    Y,\n","                                                    test_size=0.3,\n","                                                    random_state=74)"],"metadata":{"id":"HHh_9r91mYjg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" ## linear regression\n"," lin_reg_model = LinearRegression()\n","\n"," lin_reg_model.fit(X_train, Y_train)"],"metadata":{"id":"JYrb21o1nv7-","colab":{"base_uri":"https://localhost:8080/","height":75},"executionInfo":{"status":"ok","timestamp":1697642040617,"user_tz":-330,"elapsed":484,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"eb8e551f-4391-4e31-c145-13257348f961"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":[" #  prediction on training data\n","training_data_prediction = lin_reg_model.predict(X_train)\n","\n","# R Squared error\n","\n","training_error_score = metrics.r2_score(Y_train, training_data_prediction)\n","print(training_error_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MmxsXgLyn6S3","executionInfo":{"status":"ok","timestamp":1697642044797,"user_tz":-330,"elapsed":515,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"8c46aa9b-71f0-42e7-8dc9-33a74b193142"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8742060571215906\n"]}]},{"cell_type":"code","source":["# prediction on Testing data\n","testing_data_prediction = lin_reg_model.predict(X_test)\n","\n","# R Squared error\n","\n","testing_error_score = metrics.r2_score(Y_test, testing_data_prediction)\n","print(testing_error_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sHVRIEjgoE7s","executionInfo":{"status":"ok","timestamp":1697642050827,"user_tz":-330,"elapsed":516,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"2328ba60-6678-4ad9-a758-41fd790041de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8738242650302729\n"]}]},{"cell_type":"code","source":["# Visualize the Actual and predicted price(bassed on training data)\n","\n","plt.scatter(Y_train,training_data_prediction)\n","plt.xlabel('Actual price')\n","plt.ylabel('Predicted price')\n","plt.title('Actual price vs prediction price(based on Training Data )')\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"87aKmy9UoMb7","executionInfo":{"status":"ok","timestamp":1697642056974,"user_tz":-330,"elapsed":1314,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"d84127d5-3d51-4683-f134-86847b21023f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Visualize the Actual and predicted price(bassed on testing data)\n","\n","plt.scatter(Y_test,testing_data_prediction)\n","plt.xlabel('Actual price')\n","plt.ylabel('Predicted price')\n","plt.title('Actual price vs prediction price(based on Testing Data )')\n","plt.show"],"metadata":{"id":"a9os5FMDoUam","colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1697642063972,"user_tz":-330,"elapsed":1144,"user":{"displayName":"ANSHU TIWARI","userId":"05625239064891269634"}},"outputId":"3c3cd7a6-ff13-45be-eec7-2e35d675c4f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}
